零、安装CentOS 7的硬盘分区（使用GPT分区表）
1.biosboot	标准分区		2MB				文件系统BIOS Boot
2./		LVM		10GB（修改“固定大小 30GB“）	文件系统xfs
3./home		LVM		5GB				文件系统xfs
4.swap		LVM		1GB				文件系统swap
5./boot		标准分区		1GB				文件系统xfs 	
一、安装依赖软件包
1.yum install gtk2 gtk2-devel
2.yum install libXt libXt-devel
3.yum install libXpm libXpm-devel
4.yum install SDL SDL-devel
5.yum install libXrandr-devel.x86_64
6.yum install xorg-x11-server-devel
7.yum install gcc
8.yum install gcc-c++
二、下载bochs-2.6.8并解压
1.wget https://sourceforge.net/projects/bochs/files/bochs/2.6.8/bochs-2.6.8.tar.gz
2.mv bochs-2.6.8.tar.gz /home/george/下载/
3.tar -zxvf bochs-2.6.8.tar.gz  -C /usr/local
三、基于源码编译bochs-2.6.8
1.cd /usr/local/bochs-2.6.8
2.通过./configure建立Makefile文件：./configure --with-x11 --with-wx --enable-debugger --enable-disasm --enable-all-optimizations --enable-readline --enable-long-phy-address --enable-ltdl-install --enable-idle-hack --enable-plugins --enable-a20-pin --enable-x86-64 --enable-smp --enable-cpu-level=6 --enable-large-ramfile --enable-repeat-speedups --enable-fast-function-calls --enable-handlers-chaining --enable-trace-linking --enable-configurable-msrs --enable-show-ips --enable-cpp --enable-debugger-gui --enable-iodebug --enable-logging --enable-assert-checks --enable-fpu --enable-vmx=2 --enable-svm --enable-3dnow --enable-alignment-check --enable-monitor-mwait --enable-avx --enable-evex --enable-x86-debugger --enable-pci --enable-usb --enable-voodoo
3.cp misc/bximage.cpp misc/bximage.cc
cp iodev/hdimage/hdimage.cpp iodev/hdimage/hdimage.cc
cp iodev/hdimage/vmware3.cpp iodev/hdimage/vmware3.cc
cp iodev/hdimage/vmware4.cpp iodev/hdimage/vmware4.cc
cp iodev/hdimage/vpc-img.cpp iodev/hdimage/vpc-img.cc
cp iodev/hdimage/vbox.cpp iodev/hdimage/vbox.cc
4.make clean
make
make install
四、配置bochs运行环境
1.（文件名前有 . 为隐藏文件，要用ls -al才能看见）备份.bochsrc配置文件cp .bochsrc .bochsrc.backup
2.修改.bochsrc，删除文件里原有内容，复制粘贴以下内容
# configuration file generated by Bochs
plugin_ctrl:unmapped=1,biosdev=1，speaker=1,extfpuirq=1,parallel=1,serial=1,iodebug=1
config_interface:textconfig
display_library:x
#memory:host=2048,guest=2048
romimage:file="/usr/local/share/bochs/BIOS-bochs-latest"
vgaromimage:file="/usr/local/share/bochs/VGABIOS-lgpl-latest"
boot:floppy
floppy_bootsig_check:disable=0
floppya:type=1_44,1_44="boot.img",status=inserted,write_protected=0
#no floppyb
ata0:enabled=1,ioaddr1=0x1f0,ioaddr2=0x3f0,irq=14
ata0-master:type=none
ata0-slave:type=none
ata1:enabled=1,ioaddr1=0x170,ioaddr2=0x370,irq=15
ata1-master:type=none
ata1-slave:type=none
ata2:enabled=0
ata3:enabled=0
pci:enabled=1,chipset=i440fx
vga:extension=vbe,update_freq=5

cpu:count=1:1:1,ips=4000000,quantum=16,model=corei7_haswell_4770,reset_on_triple_fault=1,cpuid_limit_winnt=0,ignore_bad_msrs=1,mwait_is_nop=0,msrs="msrs.def"

cpuid:x86_64=1,level=6,mmx=1,sep=1,simd=avx512,aes=1,movbe=1,xsave=1,apic=x2apic,sha=1,adx=1,xsaveopt=1,avx_f16c=1,avx_fma=1,bmi=bmi2,1g_pages=1,pcid=1,fsgsbase=1,smep=1,smap=1,mwait=1,vmx=1
cpuid:family=6,model=0x1a,stepping=5,vendor_string="GenuineIntel",
brand_string="Intel(R) Core(TM) i7-4770 CPU (Haswell)"

print_timestamps:enabled=0
debugger_log:-
magic_break:enabled=0
port_e9_hack:enabled=0
private_colormap:enabled=0
clock:sync=none,time0=local,rtc_sync=0
#no cmosimage
#no loader
log:-
logprefix:%t%e%d
debug:action=ignore
info:action=report
error:action=report
panic:action=ask
keyboard:type=mf,serial_delay=250,paste_delay=100000,user_shortcut=none
mouse:type=ps2,enabled=0,toggle=ctrl+mbutton
speaker:enabled=1,mode=system
parport1:enabled=1,file=none
parport2:enabled=0
com1:enabled=1,mode=null
com2:enabled=0
com3:enabled=0
com4:enabled=0

megs:2048
五、下载并安装NASM
1.cd /home/george/下载
wget https://www.nasm.us/pub/nasm/releasebuilds/2.16.03/nasm-2.16.03.tar.gz
tar -zxvf nasm-2.16.03.tar.gz -C /usr/local/
2.cd /usr/local/nasm-2.16.03 
./configure
make clean
make
make install
3.为NASM新建桌面快捷方式：在/home/george/桌面新建nasm.desktop文件，复制粘贴以下内容
[Desktop Entry]
Name=NASM
Comment=NASM-2.16.03
Exec=/usr/local/nasm-2.16.03/nasm
Icon=/usr/local/nasm-2.16.03/nsis/nasm.ico
Terminal=true
Type=Application
Categories=Application
Name[zh_CN]=nasm
六、下载并安装Visual Studio Code v1.81版，并设置系统字体和VSCode字体
1.前往https://code.visualstudio.com/updates/v1_81下载.rpm包
2.进入存放.rpm包的目录，使用yum install xxx.rpm安装
3.U盘拷贝Windows系统的所有字体（位于C:\Windows\Fonts中），并复制到CentOS7的/usr/share/fonts/myfonts目录
4.VSCode中的setting.json粘贴以下配置
{
    "editor.fontSize": 23,
    "editor.letterSpacing": 0,
    "scm.inputFontSize": 19,
    "editor.fontFamily": "Consolas, '微软雅黑', monospace",
    "terminal.integrated.fontFamily": "Consolas",
    "terminal.integrated.cursorStyle": "line",
    "terminal.integrated.fontSize": 19,
    "debug.console.fontSize": 19
}
七、建立boot.img并存放boot.bin；loader.bin；kernel.bin......
dd if=boot.bin of=boot.img bs=512 count=2880
sudo mount -t vfat -o loop boot.img /media/
sudo cp loader.bin /media/
sudo cp kernel.bin /media/
sudo sync
sudo umount /media/
bochs -f ./.bochsrc
八、一些调试技巧（包括常用bochs的debug命令；system内核可执行文件的调试；boot.bin和loader.bin的调试）
1.b 0x7C00：在地址0x7C00处打断点
2.c (0x7C00)：一直执行直到遇到死循环或执行完毕当前程序（或者执行到地址为0x7C00的代码语句处）
3.s (100)：单步执行（或向后执行100步）
4.sreg：查看各个段寄存器
5.creg：查看CR0~8、EFER、XCR0等寄存器
6.info reg：查看标志寄存器
7.x /40bx 0x7C00：查看线性地址0x7C00处内存的内容（40：40个内存单元，b：以字节为单位，x：十六进制显示）
8.xp /40bx 0x7C00：查看物理地址0x7C00处内存的内容（40：40个内存单元，b：以字节为单位，x：十六进制显示）
9.调试boot.bin和loader.bin，一般是通过在代码中插入死循环语句jmp $
10.调试system内核，用objdump -D system得到各个函数的入口地址；例如Start_Kernel：0x000000104771；color_printk：0x000000105AEC
   在调用函数的call指令处打断点，在函数出口的ret指令处打断点，之后执行<bochs: > c命令，在此期间通过各种命令查看寄存器和内存